<html>
<head>
  <script src='interface.js'></script>
</head>
<body>
  <script>
window.$ = Interface.get$()


var page1 = new Interface.Panel();

var xy = new Interface.XY({
  numChildren: 6,
  bounds:[0,0.2,1,1],
});

page1.add( xy )

var page2 = new Interface.Panel();

var thisLabel = new Interface.Label({
                                    style:'bold',
                                    size: 70,
                                    bounds:[.5,0.5,0.5,1],
                                    oninit: draw
                                    });
                                    
                                    function draw() {
                                        var ctx = thisLabel.ctx;
                                        // Create gradients
                                        var radgrad = ctx.createRadialGradient(45,45,10,52,50,30);
                                        radgrad.addColorStop(0, '#A7D30C');
                                        radgrad.addColorStop(0.9, '#019F62');
                                        radgrad.addColorStop(1, 'rgba(1,159,98,0)');
                                        
                                        var radgrad2 = ctx.createRadialGradient(105,105,20,112,120,50);
                                        radgrad2.addColorStop(0, '#FF5F98');
                                        radgrad2.addColorStop(0.75, '#FF0188');
                                        radgrad2.addColorStop(1, 'rgba(255,1,136,0)');
                                        
                                        var radgrad3 = ctx.createRadialGradient(95,15,15,102,20,40);
                                        radgrad3.addColorStop(0, '#00C9FF');
                                        radgrad3.addColorStop(0.8, '#00B5E2');
                                        radgrad3.addColorStop(1, 'rgba(0,201,255,0)');
                                        
                                        var radgrad4 = ctx.createRadialGradient(0,150,50,0,140,90);
                                        radgrad4.addColorStop(0, '#F4F201');
                                        radgrad4.addColorStop(0.8, '#E4C700');
                                        radgrad4.addColorStop(1, 'rgba(228,199,0,0)');
                                        
                                        // draw shapes
                                        ctx.fillStyle = radgrad4;
                                        ctx.fillRect(0,0,150,150);
                                        ctx.fillStyle = radgrad3;
                                        ctx.fillRect(0,0,150,150);
                                        ctx.fillStyle = radgrad2;
                                        ctx.fillRect(0,0,150,150);
                                        ctx.fillStyle = radgrad;
                                        ctx.fillRect(0,0,150,150);
                                    }

page2.add( thisLabel )


var page3 = new Interface.Panel();

var k = new Interface.Piano({
  bounds:[0,0.2,1,1],
});

page3.add( k )


/* ********************************
 
 timer functionality
 
 ******************************** */

var timer = null;

getCurrentTime = function() {
    var currentTime = new Date();
    var hours = currentTime.getHours();
    var minutes = currentTime.getMinutes();
    var seconds = currentTime.getSeconds();
    
    if (minutes < 10)
    minutes = "0" + minutes;
    
    if (seconds < 10)
    seconds = "0" + seconds;
    
    timeLabel.setValue(hours + ":" + minutes + ":" + seconds);
    
    timer.timer = setTimeout(getCurrentTime, 1000);
}


/* ********************************

boilerplate for pages functionality

******************************** */

var pages = [ page1, page2, page3 ], currentPage = null 

switchPage = function( page ) {
  if( page !== currentPage ) {
    page.active = true
    page.container.show()
    
    for( var i = 0; i < pages.length; i++ ) {
      var otherPage = pages[ i ]
      
      if( otherPage === page ) continue;
      
      otherPage.active = false
      otherPage.container.hide()

      otherPage.refresh()
    }
  }
}

switchPage( page1 )

var buttonDiv = $('<div>').css({ 
  position:'absolute',
  top:0,
  left:0,
  width:$(window).width(),
  height:$(window).height() * .2,
  background:'#000',
  opacity:0.5,
})


$('body').append( buttonDiv )

var buttonPanel = new Interface.Panel({ container:buttonDiv })
buttonPanel.ctx.lineWidth = 5;
buttonPanel.ctx.font = '60pt Calibri';
// stroke color
buttonPanel.ctx.strokeStyle = 'green';
buttonPanel.ctx.strokeText('D::Light', 600,70);


var pageNumber = 0

var prevBtn = new Interface.Button({
  bounds:[0.05,0.05,.25,0.5],
                                   stroke:'red',
  mode:'contact',
  ontouchmouseup: function() {
    pageNumber -= 1
    if( pageNumber < 0 ) pageNumber = pages.length - 1
    
    switchPage( pages[ pageNumber ] )
  }
})


var nextBtn = new Interface.Button({
  bounds:[.35,0,0.25,1],
  label:'next page',
  stroke:'red',
  fill:'yellow',
   mode:'contact',
  ontouchmouseup: function() {
    pageNumber += 1
    pageNumber = pageNumber % pages.length
    
    switchPage( pages[ pageNumber ] )
  }
})

var timeLabel = new Interface.Label({
                                 style:'bold',
                                 size: 70,
                                 bounds:[.5,0.5,0.5,1],
                                    oninit: getCurrentTime
                                 });
                                 
buttonPanel.add( prevBtn, nextBtn, timeLabel )

  </script>
</body>
</html>